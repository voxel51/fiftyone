.. _teams-api-connection:

API Connection
==============

.. default-role:: code

This page describes how to create API keys and configure your
:ref:`SDK installation <teams-python-sdk>` to connect to your Teams
deployment's API.

All actions taken via API connections are authenticated based on the user
associated with the API key, which means that concepts like user roles and
dataset permissions *are enforced*.

.. note::

   **API connections are currently in beta.** The recommended stable solution
   is to use your Teams deployment's
   :ref:`MongoDB connection <configuring-mongodb-connection>`.

Configuring an API connection
-----------------------------

You can configure an API connection by adding an API URI and API key to your
FiftyOne config as described below:

+-------------------------------+-------------------------------------+----------------------------------------------------------------------------------------+
| Config field                  | Environment variable                | Description                                                                            |
+===============================+=====================================+========================================================================================+
| `api_uri`                     | `FIFTYONE_API_URI`                  | The URI of your FiftyOne Teams API. Ask your deployment admin for this value.          |
+-------------------------------+-------------------------------------+----------------------------------------------------------------------------------------+
| `api_key`                     | `FIFTYONE_API_KEY`                  | Your FiftyOne Teams API key. :ref:`See here <teams-generate-api-key>` to generate one. |
+-------------------------------+-------------------------------------+----------------------------------------------------------------------------------------+

For example, you can set environment variables:

.. code-block:: shell

   export FIFTYONE_API_URI==XXXXXXXX
   export FIFTYONE_API_KEY==YYYYYYYY

See
:ref:`this page <configuring-fiftyone>` for more information about using your
FiftyOne config.

.. _teams-generate-api-key:

Generating an API key
---------------------

Users can generate and manage API keys via the UI or the
:ref:`Management SDK <teams-management-sdk>`.

.. note::

    Guests cannot create or use API keys.

Generating keys via the UI
~~~~~~~~~~~~~~~~~~~~~~~~~~

You can access API key management features by clicking on your account icon in
the upper-right of the FiftyOne Teams App and navigating to the
"Settings > API keys" page.

A new key can be generated by clicking on "Generate API key" and optionally
providing a nickname for the key to identify what it is used for. Click
"Generate key" to complete the process.

.. image:: /images/teams/api_key_generate.png
   :alt: api-key-generate
   :align: center

Finally, copy the key and configure it locally using one of the options
:ref:`described here <teams-api-connection>`.

.. image:: /images/teams/api_key_generated.png
   :alt: api-key-generated
   :align: center

.. warning::

   Keys are only shown once. Copy the key immediately, as it will not be
   accessible again. API keys provide full programmatic access to perform
   actions as a user, so secure them as you would a password!

Generating keys programmatically
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

You can also use
:meth:`generate_api_key() <fiftyone.management.api_key.generate_api_key>` to
generate API keys programmatically.

.. note::

   Admins can generate API keys for other users, if desired.

.. _teams-delete-api-key:

Deleting an API key
-------------------

To delete a key and remove its access, find the key to delete in the list and
click "Delete".

.. image:: /images/teams/api_key_delete.png
   :alt: api-key-delete
   :align: center

You can also programmatically delete API keys via
:meth:`delete_api_key() <fiftyone.management.api_key.delete_api_key>`.

.. note::

   Admins can delete API keys for other users, if desired.
